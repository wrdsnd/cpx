directive @auth on QUERY | MUTATION | FIELD_DEFINITION

scalar ISO8601Date
scalar ISO8601DateTime
scalar ISO8601Time

enum MediaType {
  IMAGE
  VIDEO
}

type Query {
  feed: [News]
  news(id: String!): News
  post(id: String!): Post!
  queue: [Post]
  drafts: [Post]
  timeslots: [Timeslot]
  likes: [News!]!
}

type Mutation {
  sendToQueue(input: SendToQueueInput!): Post! @auth
  removeFromQueue(id: String): Boolean @auth
  reschedule(input: RescheduleInput!): [Timeslot]! @auth
  saveAsDraft(input: SaveAsDraftInput!): Post! @auth
  login(input: LoginInput!): LoginResult!
  logout: LogoutResult! @auth
}

input LoginInput {
  email: String!
  password: String!
}

type LoginResult {
  result: Boolean!
}

type LogoutResult {
  result: Boolean!
}

input SaveAsDraftInput {
  id: String!
}

type Media {
  id: String!
  type: MediaType!
  url: String!
  post: Post!
  createdAt: ISO8601DateTime!
}

type Post {
  id: String!
  sentAt: ISO8601DateTime
  content: String!
  media: [Media!]!
  sourceId: String!
  createdAt: ISO8601DateTime
  timeslot: Timeslot
  isDraft: Boolean!
  scheduledOn: ISO8601Date
}

type Timeslot {
  id: String!
  time: ISO8601Time!
  posts(date: ISO8601Date!): [Post!]
}

type TwitterUser {
  name: String!
}

type TwitterMedia {
  type: MediaType!
  url: String!
}

type News {
  id: String!
  message: String
  user: TwitterUser!
  media: [TwitterMedia!]!
}

input MediaInput {
  type: MediaType!
  url: String!
}

input RescheduleInput {
  id: String!
  scheduledOn: ISO8601Date!
  timeslotId: String!
}

input SendToQueueInput {
  sourceId: String!
  text: String
  author: String
  media: [MediaInput]
  isDraft: Boolean
  timeslotId: String
  scheduledOn: ISO8601Date
}
